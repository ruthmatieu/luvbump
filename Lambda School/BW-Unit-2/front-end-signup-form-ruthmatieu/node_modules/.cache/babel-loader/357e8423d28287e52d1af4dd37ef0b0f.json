{"ast":null,"code":"var _jsxFileName = \"/Users/ruthmathieu/Desktop/Lambda School/BW-Unit-2/front-end/app-form/src/component/Signup.js\";\nimport React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport axios from 'axios';\nconst formSchema = yup.object().shape({\n  email: yup.string().required('An email address is required.'),\n  username: yup.string().required('Username is a required field.'),\n  password: yup.string().required('Password is a required field.').test('len', 'Password must be more than 5 characters long.', val => val.length > 5),\n  legal: yup.boolean().oneOf([true], \"Must agree to Terms of Use and Privacy Policy.\")\n});\n\nfunction Signup() {\n  const [userInput, setUserInput] = useState({\n    email: '',\n    username: '',\n    password: '',\n    legal: false\n  });\n  const [errorState, setErrorState] = useState({\n    email: '',\n    username: '',\n    password: '',\n    legal: ''\n  });\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  useEffect(() => {\n    formSchema.isValid(userInput).then(valid => {\n      setButtonDisabled(!valid);\n    });\n  }, [userInput]);\n\n  const validator = e => {\n    yup.reach(formSchema, e.target.name).validate(e.target.value).then(valid => {\n      setErrorState({ ...errorState,\n        [e.target.name]: ''\n      });\n    }).catch(err => {\n      setErrorState({ ...errorState,\n        [e.target.name]: err.errors[0]\n      });\n    });\n  };\n\n  const submitHandler = e => {\n    e.preventDefault(); //reset form once submitted\n\n    setUserInput({\n      email: '',\n      username: '',\n      password: '',\n      legal: false\n    });\n    axios.post(``, userInput);\n    console.log('login successful');\n  };\n\n  const changeHandler = e => {\n    e.persist();\n    validator(e);\n    let value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n    setUserInput({ ...userInput,\n      [e.target.name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Get started with your account\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Find your people. Engange your customers. Build your brand. Do it all with To Do List. Already have an account? *Log in*\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"email\",\n    name: \"email\",\n    value: userInput.email,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }), errorState.email.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 57\n    }\n  }, errorState.email) : null), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 67\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    name: \"username\",\n    value: userInput.username,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }), errorState.username.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 60\n    }\n  }, errorState.username) : null), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 67\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    value: userInput.password,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }), errorState.password.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 60\n    }\n  }, errorState.password) : null, errorState.password > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 53\n    }\n  }, errorState.password) : null), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"legal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"legal\",\n    name: \"legal\",\n    checked: userInput.legal,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }), \"By checking this box you are creating a HowTo account, and you agree to the HowTo's \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 58\n    }\n  }, \"Terms of Use\"), \" and \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 88\n    }\n  }, \"Privacy Policy\"), \".\")), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: buttonDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, \"Get Started!\"))));\n}\n\nexport default Signup;","map":{"version":3,"sources":["/Users/ruthmathieu/Desktop/Lambda School/BW-Unit-2/front-end/app-form/src/component/Signup.js"],"names":["React","useState","useEffect","yup","axios","formSchema","object","shape","email","string","required","username","password","test","val","length","legal","boolean","oneOf","Signup","userInput","setUserInput","errorState","setErrorState","buttonDisabled","setButtonDisabled","isValid","then","valid","validator","e","reach","target","name","validate","value","catch","err","errors","submitHandler","preventDefault","post","console","log","changeHandler","persist","type","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as yup from 'yup'; \nimport axios from 'axios';\n\nconst formSchema = yup.object().shape({\n    email: yup.string()\n            .required('An email address is required.'),\n    username: yup.string()\n            .required('Username is a required field.'),\n    password: yup.string()\n            .required('Password is a required field.')\n            .test('len', 'Password must be more than 5 characters long.', val => val.length > 5),\n    legal: yup.boolean()\n            .oneOf([true], \"Must agree to Terms of Use and Privacy Policy.\")\n})\n\nfunction Signup(){\n\n    const [userInput, setUserInput] = useState({\n        email: '',\n        username:'',\n        password: '',\n        legal: false\n    });\n\n    const [errorState, setErrorState] = useState({\n        email: '',\n        username: '',\n        password: '',\n        legal: ''\n    });\n\n    const [buttonDisabled, setButtonDisabled] = useState(true);\n    useEffect(() => {\n        formSchema.isValid(userInput).then(valid => {\n          setButtonDisabled(!valid);\n        });\n    }, [userInput]);\n\n    const validator = (e) => {\n        yup\n            .reach(formSchema, e.target.name)\n            .validate(e.target.value)\n            .then(valid => {\n                setErrorState({\n                    ...errorState,\n                    [e.target.name]: ''\n                });\n            })\n            .catch(err => {\n                setErrorState({\n                    ...errorState,\n                    [e.target.name]: err.errors[0]\n                });\n            });\n    };\n\n    const submitHandler = e => {\n        e.preventDefault();\n\n        //reset form once submitted\n        setUserInput({\n            email: '',\n            username: '',\n            password: '',\n            legal: false\n        });\n\n        axios\n            .post(``, userInput)\n        console.log('login successful')\n    };\n\n    const changeHandler = e => {\n        e.persist();\n        validator(e);\n        let value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n        setUserInput({...userInput, [e.target.name]: value});\n    };\n\n    return (\n        <div>\n            <h1>Get started with your account</h1>\n            <p>Find your people. Engange your customers. Build your brand.\n                Do it all with To Do List. Already have an account?\n                *Log in*\n            </p>\n            <div className=\"form-input\">\n                <form onSubmit={submitHandler}>\n\n                    <div>\n                        <label htmlFor=\"email\">Email</label><br/>\n                        <input\n                                type=\"text\"\n                                id=\"email\"\n                                name=\"email\"\n                                value={userInput.email}\n                                onChange={changeHandler}\n                        />\n                        {errorState.email.length > 0 ? (<p className=\"error\">{errorState.email}</p>) : null}\n                    </div>\n                    \n                    <div>\n                        <label htmlFor=\"username\">Username</label><br/>\n                        <input\n                                type=\"text\"\n                                id=\"username\"\n                                name=\"username\"\n                                value={userInput.username}\n                                onChange={changeHandler}\n                        />\n                        {errorState.username.length > 0 ? (<p className=\"error\">{errorState.username}</p>) : null}\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"password\">Password</label><br/>\n                        <input\n                                type=\"password\"\n                                id=\"password\"\n                                name=\"password\"\n                                value={userInput.password}\n                                onChange={changeHandler}\n                        />\n                        {errorState.password.length > 0 ? (<p className=\"error\">{errorState.password}</p>) : null}\n                        {errorState.password > 0 ? (<p className=\"error\">{errorState.password}</p>) : null}\n                    </div>\n                    <div>\n                        <label htmlFor=\"legal\">\n                            <input\n                                    type=\"checkbox\"\n                                    id=\"legal\"\n                                    name=\"legal\"\n                                    checked={userInput.legal}\n                                    onChange={changeHandler}\n                            />\n                            By checking this box you are creating a HowTo account, \n                            and you agree to the HowTo's <span>Terms of Use</span> and <span>Privacy Policy</span>.\n\n                        </label>\n                    </div>\n                    <button disabled={buttonDisabled}>Get Started!</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}