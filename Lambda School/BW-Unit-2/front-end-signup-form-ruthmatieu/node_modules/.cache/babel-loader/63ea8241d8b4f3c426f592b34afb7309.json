{"ast":null,"code":"var _jsxFileName = \"/Users/ruthmathieu/Desktop/Lambda School/BW-Unit-2/front-end/app-form/src/component/Login.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { AppBar, TextField, MuiThemeProvider } from '@material-ui/core';\nimport { render } from '@testing-library/react';\nconst formSchema = yup.object().shape({\n  username: yup.string().required('Username is a required field.'),\n  password: yup.string().required('Password is a required field.')\n});\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isPasswordShown: false\n    };\n\n    this.togglePasswordVisibility = () => {\n      const [isPasswordShown] = this.state;\n      this.setState({\n        isPasswordShown: !isPasswordShown\n      });\n    };\n\n    this.render = () => {\n      const {\n        isPasswordShown\n      } = this.state; //state for dislaying user info\n\n      const [data, setData] = useState([]);\n      const [buttonDisabled, setButtonDisabled] = useState(true);\n      const [userInput, setUserInput] = useState({\n        username: '',\n        password: ''\n      });\n      useEffect(() => {\n        formSchema.isValid(userInput).then(valid => {\n          setButtonDisabled(!valid);\n        });\n      }, [userInput]);\n      const [errorState, setErrorState] = useState({\n        username: '',\n        password: ''\n      });\n\n      const validator = e => {\n        yup.reach(formSchema, e.target.name).validate(e.target.value).then(valid => {\n          setErrorState({ ...errorState,\n            [e.target.name]: ''\n          });\n        }).catch(err => {\n          setErrorState({ ...errorState,\n            [e.target.name]: err.errors[0]\n          });\n        });\n      };\n\n      const submitHandler = e => {\n        e.preventDefault(); //reset form once submitted\n\n        setUserInput({\n          username: '',\n          password: ''\n        }); //ensure user data is being returned\n\n        axios.post('https://reqres.in/api/users', userInput).then(res => setData(res)).catch(err => console.log(err.res));\n        console.log('login successful');\n      };\n\n      const changeHandler = e => {\n        e.persist();\n        validator(e);\n        setUserInput({ ...userInput,\n          [e.target.name]: e.target.value\n        });\n      };\n\n      const styles = {\n        button: {\n          margin: 15\n        }\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"app-bar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, \"Log In\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, \"Log in using your username and password\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: submitHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MuiThemeProvider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        type: \"text\",\n        id: \"username\",\n        name: \"username\",\n        value: userInput.username,\n        onChange: changeHandler,\n        placeholder: \"Username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }\n      }, errorState.username.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n        className: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 68\n        }\n      }, errorState.username) : null), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(MuiThemeProvider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        type: isPasswordShown ? \"password\" : \"text\",\n        id: \"password\",\n        name: \"password\",\n        value: userInput.password,\n        onChange: changeHandler,\n        placeholder: \"Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-eye password-icon\",\n        onClick: this.togglePasswordVisibility,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }\n      }, \" \", errorState.password.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n        className: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 68\n        }\n      }, errorState.password) : null), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 37\n        }\n      }))), /*#__PURE__*/React.createElement(\"button\", {\n        style: styles.button,\n        disabled: buttonDisabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }\n      }, \"Log In\"), /*#__PURE__*/React.createElement(\"pre\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, JSON.stringify(data, null, 2))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }, \"Don't have an account? \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 43\n        }\n      }, \"Sign Up\")));\n    };\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/ruthmathieu/Desktop/Lambda School/BW-Unit-2/front-end/app-form/src/component/Login.js"],"names":["React","Component","useState","useEffect","yup","axios","AppBar","TextField","MuiThemeProvider","render","formSchema","object","shape","username","string","required","password","Login","state","isPasswordShown","togglePasswordVisibility","setState","data","setData","buttonDisabled","setButtonDisabled","userInput","setUserInput","isValid","then","valid","errorState","setErrorState","validator","e","reach","target","name","validate","value","catch","err","errors","submitHandler","preventDefault","post","res","console","log","changeHandler","persist","styles","button","margin","length","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport * as yup from 'yup'; \nimport axios from 'axios';\nimport { AppBar, TextField, MuiThemeProvider } from '@material-ui/core';\nimport { render } from '@testing-library/react';\n\n\nconst formSchema = yup.object().shape({\n    username: yup.string()\n            .required('Username is a required field.'),\n    password: yup.string()\n            .required('Password is a required field.')\n})\n\n \nclass Login extends Component {\n\n     state = {\n        isPasswordShown: false\n    }\n\n     togglePasswordVisibility = () => {\n        const [isPasswordShown] = this.state\n        this.setState({isPasswordShown : !isPasswordShown})\n    }\n    render = () => {\n        const {isPasswordShown} = this.state;\n\n        //state for dislaying user info\n const [data, setData] = useState([]);\n\n const [buttonDisabled, setButtonDisabled] = useState(true);\n const [userInput, setUserInput] = useState({\n    username: '',\n    password: ''\n});\n useEffect(() => {\n    formSchema.isValid(userInput).then(valid => {\n      setButtonDisabled(!valid);\n    });\n  }, [userInput]);\n\nconst [errorState, setErrorState] = useState({\n    username: '',\n    password: ''\n});\n\nconst validator = e => {\n    yup\n        .reach(formSchema, e.target.name)\n        .validate(e.target.value)\n        .then( valid => {\n            setErrorState({\n                ...errorState,\n                [e.target.name]: ''\n            });\n        })\n        .catch(err => {\n            setErrorState({\n                ...errorState,\n                [e.target.name]: err.errors[0]\n            })\n        })\n}\n\nconst submitHandler = e => {\n    e.preventDefault();\n\n    //reset form once submitted\n    setUserInput({\n        username: '',\n        password: ''\n    });\n\n    //ensure user data is being returned\n    axios\n        .post('https://reqres.in/api/users', userInput)\n        .then( res => setData(res))\n        .catch( err => console.log(err.res))\n\n    console.log('login successful')\n};\n\n const changeHandler = e => {\n    e.persist();\n    validator(e);\n\n    setUserInput({...userInput, [e.target.name]: e.target.value});\n};\n\nconst styles = {\n    button: {\n        margin: 15\n    }\n}\n        return(\n            <div className=\"form-input\">\n                <h1 className=\"app-bar\">Log In</h1>\n                <p>Log in using your username and password</p>\n                <form onSubmit={submitHandler}>\n\n                    <div>\n                        <MuiThemeProvider>\n                            <TextField\n                                type=\"text\"\n                                id=\"username\"\n                                name=\"username\"\n                                value={userInput.username}\n                                onChange={changeHandler}\n                                placeholder=\"Username\"\n                            /><br/>\n                            <label htmlFor=\"username\">\n                                {/*Username*/}\n                                {errorState.username.length > 0 ? (<p className=\"error\">{errorState.username}</p>) : null}\n                            </label><br/>\n                        </MuiThemeProvider>\n\n                        <MuiThemeProvider>\n                            \n                            <TextField\n                                type={(isPasswordShown) ? \"password\" : \"text\"}\n                                id=\"password\"\n                                name=\"password\"\n                                value={userInput.password}\n                                onChange={changeHandler}\n                                placeholder=\"Password\"\n                            /><br/>\n                            <i className=\"fa fa-eye password-icon\"\n                                onClick={this.togglePasswordVisibility}\n                            ></i>\n                            <label htmlFor=\"password\"> {/*Password*/}\n                                {errorState.password.length > 0 ? (<p className=\"error\">{errorState.password}</p>) : null}\n                            </label><br/>                        \n                        </MuiThemeProvider>\n                    </div>\n                    <button style={styles.button} disabled={buttonDisabled}>Log In</button>\n                    <pre>{JSON.stringify(data, null, 2)}</pre>\n                </form>\n                <p>Don't have an account? <span>Sign Up</span></p>\n            </div>\n        )\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}